/*
 * dataSet - Test Support For Data Stores.
 *
 * Copyright (C) 2014-2014 Marko Umek (http://fail-early.com/contact)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

task wrapper(type: Wrapper) {
    gradleVersion = '$gradleWrapperVersion'
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    // dataSetVersion see gradle.properties
    version = dataSetVersion
    group = 'org.failearly.dataset'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    dependencies {
        compile group: 'junit', name: 'junit', version: junitVersion
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        testCompile group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
        testCompile group: 'org.hamcrest', name:'hamcrest-library', version: hamcrestVersion
        testCompile group: 'org.mockito', name:'mockito-core', version: mockitoVersion
    }

    test {
        scanForTestClasses = false;
        include 'org/failearly/dataset/**/*Test.class'
    }

    javadoc {
        failOnError = false

        exclude '**/internal/**'


        options {
            memberLevel = JavadocMemberLevel.PROTECTED
            title = "\${project.name.capitalize()} API - Version \${project.version}"
            windowTitle = title
            linkSource = true
            // TODO : Update stylesheet
            // stylesheetFile = "\${rootDir}/doc/css/stylesheet.css" as File
            footer = 'Copyright (C) 2014 <a href="http://fail-early.com">Fail Early</a>. All rights reserved.'
        }
    }

    task sourcesJar(type: Jar, dependsOn:[classes, test]) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:[javadoc, test]) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    jar {
        dependsOn test
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}
